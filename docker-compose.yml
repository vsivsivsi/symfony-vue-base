version: '3.9'

# docker-composes работает с сервисами.
# 1 сервис = 1 контейнер.
# Сервисом может быть клиент, сервер, сервер баз данных...
# Раздел, в котором описаны сервисы, начинается с 'services'.

services:
  # Первый сервис (контейнер): shop-php.
  # Назвать его можно так, как нужно разработчику.
  # Понятное название сервиса помогает определить его роль.

  shop-php:
    container_name: shop-php
    user: "${UID}:${GID}"
    build:
      context: ./docker/dev/php-fpm
    environment:
      - APP_ENV=${APP_ENV}
      - APP_SECRET=${APP_SECRET}
      - DATABASE_TIMEZONE=Europe/Kiev
    volumes:
      - ./:/var/www
      - ./docker/dev/php-fpm/php.ini:/usr/local/etc/php/php.ini


  shop-nginx:
    container_name: shop-nginx
    build:
      context: ./docker/dev/nginx
    volumes:
      - ./:/var/www
      - ./docker/dev/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/dev/nginx/sites/:/etc/nginx/sites-available
      - ./docker/dev/nginx/conf.d/:/etc/nginx/conf.d
      - ./docker/logs:/var/log
    depends_on:
      - shop-php

    # Если мы хотим обратиться к серверу с локальногонашего компьютера (находясь за пределами контейнера),
    # мы должны организовать перенаправление этого порта на порт компьютера.
    # Сделать это нам поможет ключевое слово 'ports'.
    # При его использовании применяется следующая конструкция: [порт компьютера]:[порт контейнера]
    # В нашем случае нужно использовать порт компьютера 80 и организовать его связь с портом
    # 80 контейнера (так как именно на этот порт сервер ожидает поступления запросов).

    ports:
      - "8180:80"
#      - "443:443"

  shop-mssql:
    container_name: shop-mssql
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=1Ghbdtn!
    env_file: ./docker/dev/mssql/.env
    ports:
      - "1433:1433"
    volumes:
      - ms_sqlserver_data:/var/opt/mssql

volumes:
  ms_sqlserver_data:
    driver: local

#  shop-node:
#    container_name: shop-node
#    image: node:latest
#    volumes:
#      - ./:/var/www
#    working_dir: /var/www
#    ports:
#      - "8080:8080"

